# Checks for potential issues in the source code.

name: Check-C

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - 'dependabot/**'
    paths:
      - '**.c'
      - '**.h'
      - 'm4/**'
      - 'src/**.mk'
      - 'src/**Makefile'
      - .github/workflows/check-c.yml
      - Makefile
      - ci/printenv.sh
      - config.mk.in
      - config.sh.in
      - configure
      - configure.ac
  pull_request:
    paths:
      - '**.c'
      - '**.h'
      - 'm4/**'
      - 'src/**.mk'
      - 'src/**Makefile'
      - .github/workflows/check-c.yml
      - Makefile
      - ci/printenv.sh
      - config.mk.in
      - config.sh.in
      - configure
      - configure.ac
  schedule:
    - cron: '0 7 * * 2'

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  scan-build:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481
      with:
        egress-policy: block
        allowed-endpoints: >
          archive.ubuntu.com:80
          azure.archive.ubuntu.com:80
          github.com:443
          packages.microsoft.com:443
          ppa.launchpadcontent.net:443
          security.ubuntu.com:80
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
    - name: update package information
      run: sudo apt-get update -qy
    - name: install clang-tools-14 and dependencies
      run: >
        sudo apt-get install -qy
        clang-tools-14 libapparmor-dev libselinux1-dev
    - name: print env
      run: ./ci/printenv.sh
    - name: configure
      run: >
        ./configure CC=clang-14 SCAN_BUILD=scan-build-14
        --prefix=/usr --enable-fatal-warnings
        --enable-apparmor --enable-selinux
        || (cat config.log; exit 1)
    - name: scan-build
      run: make -j "$(nproc)" scan-build

  cppcheck:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481
      with:
        egress-policy: block
        allowed-endpoints: >
          archive.ubuntu.com:80
          azure.archive.ubuntu.com:80
          github.com:443
          packages.microsoft.com:443
          ppa.launchpadcontent.net:443
          security.ubuntu.com:80
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
    - name: update package information
      run: sudo apt-get update -qy
    - name: install cppcheck
      run: sudo apt-get install -qy cppcheck
    - name: configure
      run: >
        ./configure CPPCHECK="cppcheck -q -j '$(nproc)'"
        || (cat config.log; exit 1)
    - run: cppcheck --version
    - name: cppcheck
      run: make cppcheck

  codeql-cpp:
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          api.github.com:443
          github.com:443
          objects.githubusercontent.com:443
          uploads.github.com:443

    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

    - name: print env
      run: ./ci/printenv.sh

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@b56ba49b26e50535fa1e7f7db0f4f7b4bf65d80d
      with:
        languages: cpp

    - name: configure
      run: ./configure

    - name: make
      run: make -j "$(nproc)"

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@b56ba49b26e50535fa1e7f7db0f4f7b4bf65d80d
